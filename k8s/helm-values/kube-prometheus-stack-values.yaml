# Helm values for kube-prometheus-stack
# Chart: prometheus-community/kube-prometheus-stack
# This configures the complete monitoring stack including Prometheus, Grafana, Alertmanager, and various exporters

# Prometheus Operator
prometheusOperator:
  enabled: true
  admissionWebhooks:
    enabled: false  # Disable to simplify initial deployment

# Prometheus Configuration
prometheus:
  enabled: true
  prometheusSpec:
    retention: 7d
    retentionSize: "10GB"
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 20Gi
    
    # Additional scrape configs for banking API
    additionalScrapeConfigs:
      - job_name: 'banking-api'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - core-banking
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: bank-api
          - source_labels: [__meta_kubernetes_pod_container_port_number]
            action: keep
            regex: "8080"
          - target_label: __address__
            replacement: '${1}:8080'
            source_labels: [__meta_kubernetes_pod_ip]
          - target_label: __metrics_path__
            replacement: '/prometheus'
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
    
    # Resource limits
    resources:
      requests:
        memory: 400Mi
        cpu: 100m
      limits:
        memory: 2Gi
        cpu: 1000m

# Grafana Configuration
grafana:
  enabled: true
  adminPassword: admin  # Change in production
  
  # Persistence for dashboards
  persistence:
    enabled: true
    size: 5Gi
  
  # Service configuration
  service:
    type: LoadBalancer
    port: 80
    targetPort: 3000
  
  # Additional data sources if needed
  additionalDataSources:
    - name: Loki
      type: loki
      url: http://loki:3100
      access: proxy
      isDefault: false
  
  # Dashboard providers
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          updateIntervalSeconds: 10
          allowUiUpdates: true
          options:
            path: /var/lib/grafana/dashboards/default
        - name: 'kubernetes'
          orgId: 1
          folder: 'Kubernetes'
          type: file
          disableDeletion: false
          updateIntervalSeconds: 10
          allowUiUpdates: true
          options:
            path: /var/lib/grafana/dashboards/kubernetes
        - name: 'banking'
          orgId: 1
          folder: 'Banking'
          type: file
          disableDeletion: false
          updateIntervalSeconds: 10
          allowUiUpdates: true
          options:
            path: /var/lib/grafana/dashboards/banking
  
  # Configure dashboards from ConfigMaps
  dashboardsConfigMaps:
    default: "grafana-dashboards"
    kubernetes: "grafana-kubernetes-dashboards"
    banking: "grafana-banking-dashboards"
  
  # Resource limits
  resources:
    requests:
      memory: 128Mi
      cpu: 50m
    limits:
      memory: 512Mi
      cpu: 200m

# AlertManager Configuration
alertmanager:
  enabled: true
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi
    
    # Basic alert routing
    config:
      global:
        resolve_timeout: 5m
      route:
        group_by: ['alertname', 'cluster', 'service']
        group_wait: 10s
        group_interval: 10s
        repeat_interval: 12h
        receiver: 'null'
        routes:
          - match:
              alertname: Watchdog
            receiver: 'null'
          - match:
              severity: critical
            receiver: 'critical-receiver'
      receivers:
        - name: 'null'
        - name: 'critical-receiver'
          # Configure webhook, email, or Slack notifications here
  
  # Resource limits
  resources:
    requests:
      memory: 128Mi
      cpu: 10m
    limits:
      memory: 256Mi
      cpu: 100m

# Node Exporter - System metrics from nodes
nodeExporter:
  enabled: true
  hostRootfs: /host/root
  resources:
    requests:
      memory: 30Mi
      cpu: 10m
    limits:
      memory: 100Mi
      cpu: 100m

# Kube State Metrics - Kubernetes object metrics
kubeStateMetrics:
  enabled: true
  resources:
    requests:
      memory: 64Mi
      cpu: 10m
    limits:
      memory: 256Mi
      cpu: 100m

# Prometheus Node Exporter
prometheus-node-exporter:
  enabled: true
  hostRootFsMount:
    enabled: true
  resources:
    requests:
      memory: 30Mi
      cpu: 10m
    limits:
      memory: 100Mi
      cpu: 100m

# Kube-prometheus-stack specific configurations
kubeApiServer:
  enabled: true

kubeControllerManager:
  enabled: true

kubeScheduler:
  enabled: true

kubeProxy:
  enabled: true

kubeEtcd:
  enabled: true

# Default Prometheus Rules
defaultRules:
  create: true
  rules:
    alertmanager: true
    etcd: true
    general: true
    k8s: true
    kubeApiserver: true
    kubeApiserverAvailability: true
    kubeApiserverError: true
    kubeApiserverSlos: true
    kubelet: true
    kubePrometheusGeneral: true
    kubePrometheusNodeAlerting: true
    kubePrometheusNodeRecording: true
    kubernetesAbsent: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeScheduler: true
    kubeStateMetrics: true
    network: true
    node: true
    prometheus: true
    prometheusOperator: true

# Global settings
global:
  rbac:
    create: true
    pspEnabled: false  # PSPs are deprecated in newer K8s versions

# Namespace configuration
namespaceOverride: "core-banking"

# Additional labels for all resources
commonLabels:
  environment: "production"
  project: "core-banking"