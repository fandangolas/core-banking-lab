services:
  # Main Banking API
  banking-api:
    build:
      context: ..
      dockerfile: Dockerfile.api
    ports:
      - "8080:8080"
    environment:
      - RATE_LIMIT_REQUESTS_PER_MINUTE=2000
      - CORS_ALLOWED_ORIGINS=http://localhost:9999
    networks:
      - monitoring

  # Performance Test Web UI
  perf-test-ui:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "9999:9999"
    environment:
      - API_URL=http://banking-api:8080
      - PROMETHEUS_URL=http://prometheus:9090
    depends_on:
      - banking-api
    volumes:
      - ./reports:/app/reports
    networks:
      - monitoring

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ../monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    depends_on:
      - banking-api
    networks:
      - monitoring

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ../monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ../monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - monitoring

volumes:
  prometheus_data:
  grafana_data:

networks:
  monitoring: